<!DOCTYPE html>
<html lang="en">
<head>
	<meta charset="utf-8">
	<meta name="viewport" content="width=device-width, initial-scale=1">
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>
	<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.2.1/css/bootstrap.min.css">
	<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
	<!-- fonts -->
	<link href="https://fonts.googleapis.com/css?family=Fira+Sans:300" rel="stylesheet">
	<!-- icons -->
	<link rel='stylesheet' href='https://use.fontawesome.com/releases/v5.7.0/css/all.css' integrity='sha384-lZN37f5QGtY3VHgisS14W3ExzMWZxybE1SJSEsQp9S+oqd12jhcu+A56Ebc1zFSJ' crossorigin='anonymous'>
	<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">

	<title>start task</title>
	<style>
	:root {
  		--dusty-pink: rgb(212,171,179);
  		--dusty-blue: rgb(153,195,203);
  		--dusty-gray: rgb(104,124,135);
	}
	body{
		font-family: 'Fira Sans', sans-serif;
	}
	.navbar {
	    width:100%;
	    margin:0px auto;
	    bottom: 0;
	    padding: 0;
	    position: fixed;

	    /*list-style:none;*/
	    text-align:center;
	    /*font-family: sans-serif; */
		/*background-color: gray;*/
		/*overflow: hidden;*/
	}
	.navbar li { 
	    display:inline-block;
	    width:24%; 
	    margin:0;
	    padding:0;
	}
	li:hover{
		/*background-color: gray;*/
	}
	a:hover{
		text-decoration:none;
	}
	.fixed-length button{
		width:100%;
	}
	.center-page{
		position: fixed;
		top: 10%;
		left: 5%;
		width: 70%; /* width of everything */
		/*transform: translate(-50%, -50%);*/
	}
	.left{
		float:left;
	}
	.right{
		float:right;
	}
	.material-icons, .fas, .navbar .glyphicon, .btn{
		font-size:240%;
		color:white;
	}
	
	.dropdown-toggle, .btn-secondary{ 
		/*dusty pink*/
		background-color: var(--dusty-pink);
		color:white;
		height:50px;
		font-size:18px;
	}

	.pad-10{
		padding: 10% 0%;
	}
	.no-margin{
		margin: 0;
	}
	.title{
		color: var(--dusty-blue);
		margin-bottom:0px;
	}
	#show_submit{
		position:fixed;
		/*text-align:center;*/
		width:80%;
		bottom:10%;
		left:10%;
	}
	.fixed-length{
		width:135%;
	}
	div p{
		font-size:20px;
	}

	.btn-block{
		border-radius:0 ;
		border: 1px solid gray;
		font-size:20px;
	}
	.btn-block-time{
		border-radius:0 ;
		border: 1px solid gray;
		font-size:20px;
	}

	.bg-pink{
		background-color: var(--dusty-pink);
	}
	.bg-gray{
		background-color: var(--dusty-gray);
	}
	.bg-blue{
		background-color: var(--dusty-blue);
	}
	</style>

	
</head>


<body>
	<!-- NAVBAR -->
	<ul class="navbar border-top bg-blue">
		<li class="border-right"><a href="main_timer" onclick="return confirmLeave()"><span class="material-icons">add_alarm</span></a></li>
		<li class="border-right"><a href="main_todo" onclick="return confirmLeave()"><span class="fas fa-tasks" aria-hidden="true"></span></a></li>
		<li class="border-right"><a href="main_log" onclick="return confirmLeave()"><span class="fas fa-history" aria-hidden="true"></span></a></li>
		<li><a href="main_settings" class="glyphicon glyphicon-cog" onclick="return confirmLeave()"></a></li>
	</ul>



	<!-- Top left back button -->
	<h2 class="font-blue pad-10 no-margin" style="padding-left:20px">
		<a href='index' onclick="return confirmLeave()"><span class="glyphicon glyphicon-chevron-left title"></span></a>
	</h2>


	<div class="container center-page">
	<br><br>

	<!-- can do <li id="\{\{@index\}\}"> -->
	<!-- class will be only instance, using as second id -->


	<!-- Class / subject -->
	<div id="show_subject">
		<p class="title">subject</p>
		<div class="dropdown fixed-length">
		  <button class="btn btn-default btn-block dropdown-toggle" type="button" id="dropSubject" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">subject </button>
		  <ul class="dropdown-menu" aria-labelledby="dropSubject">
	         {{#each subjects}}
	         	<!-- change id here  -->
		    	<li id="{{@index}}"><a href="#" id="{{makeIdHandle name}}">{{name}}</a></li>
	         {{/each}}
		  </ul>
		</div>
	</div>
	<br>


	<!-- Task / assignment -->
	<div id="show_assignment" style="display:none">
		<p class="title">assignment</p>
		<div class="dropdown fixed-length">
		  <button class="btn btn-default btn-block dropdown-toggle" type="button" id="dropAssignment" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">assignment </button>
		  <ul class="dropdown-menu" aria-labelledby="dropAssignment" id="addTasks">
		  	<!-- dynamically populate in js from subject above -->
		  </ul>	
		</div>
	</div>
	<br>


	<!-- Select Time / time length-->
	<div id="show_time" style="display:none">
		<p class="title" style="padding-bottom: 10px">time length</p>

		<div class="dropdown" style="display:inline; float:left">

		  <button class="btn btn-default btn-block-time dropdown-toggle" type="button" id="dropHour" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">- </button>
		  <span class="title" style="font-size:20px"> hr</span>
		  <ul class="dropdown-menu" aria-labelledby="dropHour">
		    <li><a href="#">0</a></li>
		    <li><a href="#">1</a></li>
		    <li><a href="#">2</a></li>
		    <li><a href="#">3</a></li>
		    <li><a href="#">4</a></li>
		  </ul>
		</div>
		
	
		<div class="dropdown" style="display:inline; float:right">
		  <button class="btn btn-default btn-block-time dropdown-toggle" type="button" id="dropMinute" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">- </button> 
		  <span class="title" style="font-size:20px"> min</span>
		  <ul class="dropdown-menu" aria-labelledby="dropMinute">
		  	<li><a href="#">0</a></li>
		    <li><a href="#">5</a></li>
		    <li><a href="#">10</a></li>
		    <li><a href="#">15</a></li>
		    <li><a href="#">20</a></li>
		    <li><a href="#">25</a></li>
		    <li><a href="#">30</a></li>
		    <li><a href="#">35</a></li>
		    <li><a href="#">40</a></li>
		    <li><a href="#">45</a></li>
		    <li><a href="#">50</a></li>
		    <li><a href="#">55</a></li>
		  </ul>
		</div>
	</div>
	<br><br><br><br>


	<!-- Breaks -->
	<div id="show_breaks" style="display:none">
		<p class="title">breaks</p>
		<div class="btn-toolbar" role="toolbar" aria-label="Toolbar with button groups">
		  <div class="btn-group mr-2" role="group" aria-label="First group">
		 
		    <button type="button" class="btn btn-secondary  break-btn" onclick="selectTime(1)">1</button>
		    <button type="button" class="btn btn-secondary  break-btn" onclick="selectTime(2)">2</button>
		    <button type="button" class="btn btn-secondary  break-btn" onclick="selectTime(3)">3</button>
		    <button type="button" class="btn btn-secondary  break-btn" onclick="selectTime(4)">4</button>
		    <button type="button" class="btn btn-secondary  break-btn" onclick="selectTime(5)">5</button>
		    <!-- <button type="button" class="btn btn-secondary break-btn" onclick="selectTime(6)">6</button> -->
		    <!-- can add back more breaks, can't get them to align rn in timer.handlebars -->
		  </div>
		</div>
	</div>
	<br>

	<div id="show_submit" style="display:none">
		<!-- <a href='/'><span class="glyphicon glyphicon-arrow-left left"></span></a> -->
		
		<!-- invisible form to send data -->
		<form action="timer" method="get" name="invisible" id="toTimer">
			<button onclick="return validateForm();" style="float:right"><span class="glyphicon glyphicon-arrow-right right"></span></button>
		</form>
		<input type="hidden" id="breaks" name="breaks">

		<br>
			<!-- <p class="left title">save for later</p> -->
			<p class="right title">let's study!</p>
	</div>

	 <!-- super inefficient -->
  <div id="hiddenTasks" style="display:none">
   {{#each tasks}}
  	<ul id="task{{@index}}">asdf
  		{{#each this}}
  		<li>{{name}}</li>
  		{{/each}}
  	</ul>
  	{{/each}}
  </div>

  <!-- invisible form to send to + new task page -->
	<form action="tasks" method="get" id="toTasks_form">
		<input type="hidden" id="toTask_subject" name="subject">
	</form>



</div>

<script>


$(document).ready( ()=>{
	//add event listeners

	console.log("populated");
		console.log({{toString populated}});

	if ({{toString populated}}){
		//if true, prepopulate 

		//preselect subject
		$('#dropSubject').html("{{curr_subj}}");
		$('#dropSubject').val("{{curr_subj}}");
		$('#dropSubject').css("background-color","rgb(209, 98, 118)");

		//display the choices for curr subject and preselect
		window["displayNewTasks"]();
		$('#dropAssignment').html("{{curr_task}}");
		$('#dropAssignment').val("{{curr_task}}");
		$('#dropAssignment').css("background-color","rgb(209, 98, 118)");

		//display the hidden ones because first two already populated
		$('#show_assignment').css("display","block");
		$('#show_time').css("display","block");
	}

	//main dropdown text is changed when selected
	$(".dropdown-menu li a").click(changeText);

	$("#show_subject").one( 'click', () => {  display("#show_assignment"); } );
	$("#show_assignment").one( 'click', () => { display("#show_time"); } );
	$("#show_time").one( 'click', () => {  display("#show_breaks"); } );
	$("#show_breaks").one( 'click', () => {  display("#show_submit"); } );


    //when new subject is selected or changed
	$("body").on('DOMSubtreeModified', "#dropSubject", displayNewTasks);

});


function makeIdLocal(taskName){
	return taskName.replace(/\s/g,''); 
}

var displayNewTasks = function(){

	//current subject selected
	var currSubject = $("#dropSubject").html();
	if (currSubject == ""){
		//first fires due to domsubtree modified, do nothing
		return;
	}

	//reverse-lookup string of current selected subject
	//which is id, and find the corresponding index in array
	var currId = "#"+makeIdLocal(currSubject);
	var currIndex = $(currId).parent().attr('id');

	//grabs the corresponding task list of current selected subject
	//(is the outer hidden unordered list tag with id of 'task#')
	var lookupTasks = "#task"+currIndex;


	//clears all list items in #addTasks, so we can replace with new tasks
	$("#addTasks").html("");

	//clear previously chosen assignment (#addTasks's parent's first element)
	$("#addTasks").parent().find('.btn').html("assignment");
	$("#addTasks").parent().find('.btn').css("background-color","rgb(212,171,179)");
	$("#addTasks").parent().find('.btn').val(""); //reset so form cant submit cause empty
	

	//TODO find a way to amke it so if previously selected subject is same, dont reset assignemnts

	for (var i = 0; i < $(lookupTasks+ " li").length ; i++){
		var taskItem= $($(lookupTasks).children()[i]); //li
		var taskString = taskItem.text();
		var taskCompleteTag = '<li><a href="#">' + taskString + '</a></li>';
		$("#addTasks").append( taskCompleteTag );
	}

	//resets the click event for changing dropdown text
	$("#addTasks li a").click(changeText);

	//append new task, important to add this after above click bonding
	$("#addTasks").append('<li><a href="#" onclick="return routeNewTask();">+ new task</a></li>');
}

/* Confirms leave upon clicking "+ Add New" task, will route to new_subject page to add to todo list */
function routeNewTask(){
	var c = confirm("Are you sure you want to leave this page create a new task? Your changes will not be saved.");

	if (!c){ return false; }
	else{
		//get current subject you want to add new task to
		var currSubject = $("#dropSubject").val();
		$("#toTask_subject").val(currSubject);
		$("#toTasks_form").submit();
		
		//   <!-- invisible form to send to + new task page -->
		// <form action="tasks" method="get" id="toTasks_form">
		// 	<input type="hidden" id="toTask_subject" name="subject">
		// </form>
	}

}




var display = function(next){
	$(next).css('display', 'block');
}



/* Set as click event, so a selection will be displayed and colored */
function changeText(){
	$(this).parents(".dropdown").find('.btn').html($(this).text()+' ');
	$(this).parents(".dropdown").find('.btn').val($(this).text());
	$(this).parents(".dropdown").find('.btn').css("background-color","rgb(209, 98, 118)");
}


/* Dynamic coloring for break selection */
function selectTime(n){
	//resets all buttons to original color
	document.getElementById("breaks").value = n;
	$(".btn-secondary").css("background-color","rgb(212,171,179)");

	//highlights new selected amount
	for (var i = 0; i < n; i++){
		$('.break-btn').eq(i).css("background-color","rgb(209, 98, 118)");
	}
}

/* Validates that all form fields are filled out, otherwise throw error */
/* Error Checks */
function validateForm(){

	var h = document.getElementById("dropHour").value;
	var m = document.getElementById("dropMinute").value;
	var totalTime = (parseInt(h)*3600) + parseInt(m*60);

	var t1 = document.getElementById("dropAssignment").value;
	var t2 = document.getElementById("dropHour").value;
	var t3 = document.getElementById("dropMinute").value;
	var t4 = document.getElementById("breaks").value;
	var t5 = totalTime;
	if (t1 == "" || t1 == null || 
		t2 == "" || t2 == null || 
		t3 == "" || t3 == null || 
		t4 == "" || t4 == null ||
		t5 == "" || t5 == null){
		alert("Please fill in all categories.");
		return false;
	}
	if ( (t2==0) && (t3<15)){
		alert("Please set your timer to at least 15 minutes.");
		return false;
	}

	//send xml post request to put things in current

	var new_list = { 
		"totalTimeSet": totalTime,
		"totalTimeLeft": totalTime,
		"subject": document.getElementById("dropSubject").value,
		"assignment": document.getElementById("dropAssignment").value,
		"breaks": document.getElementById("breaks").value,
		"breakLength": "{{breakLength}}"
	};

	var xhr = new XMLHttpRequest();
	xhr.open('post', 'timer');
	xhr.setRequestHeader('Content-Type', 'application/json');
	console.log("xml timer payload" + JSON.stringify(new_list));
	xhr.onerror = function(){ 
		alert("Edit request failed in main timer with " + xhr.status +" "+ xhr.statusText + ". Please refresh and try again. If this problem persists, please forward the error message details to us through the 'Contact Us' form inside settings.");
		return false; 
	} 
	xhr.onload = function(){
		// alert(xhr.responseText); 
		// alert(xhr.status + xhr.statusText);
		document.getElementById("toTimer").submit();
		return true;
	}
	xhr.send(JSON.stringify(new_list));

	//return true;
	return false;
}



function confirmLeave(){ 
	return confirm('Are you sure you want to leave this page? Your data will be lost');
}


</script>



</body>
</html>
